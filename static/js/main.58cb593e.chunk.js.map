{"version":3,"sources":["components/social-profile/Profile.module.css","components/statistics/Statistic.module.css","components/friend-item/FriendItem.module.css","components/friend-list/FriendList.module.css","components/transaction-history/TransactionHistory.module.css","components/social-profile/Profile.js","helpers/randomColor.js","components/statistics/Statistic.js","components/friend-item/FriendItem.js","components/friend-list/FriendList.js","components/transaction-history/TransactionHistory.js","components/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","style","profile","src","alt","list","label","quantity","followers","views","likes","randomColor","rgbNum","Math","floor","random","r","g","b","Statistic","title","s","statistics","statList","map","percentage","id","item","backgroundColor","defaultProps","FriendItem","state","isOnline","styles","IsOnline","IsOffline","Avatar","width","Name","FriendList","friends","Item","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transaction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58cb593e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__1Dd7d\",\"profile\":\"Profile_profile__3yC4b\",\"name\":\"Profile_name__16Rp0\",\"tag\":\"Profile_tag__1OtMO\",\"location\":\"Profile_location__2DFqf\",\"description\":\"Profile_description__3onwZ\",\"stats\":\"Profile_stats__35rlX\",\"quantity\":\"Profile_quantity__2vt2m\",\"list\":\"Profile_list__31k-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__3BWzt\",\"title\":\"Statistic_title__1Ypqo\",\"statList\":\"Statistic_statList__pyrLF\",\"item\":\"Statistic_item__CAsLb\",\"label\":\"Statistic_label__78iWd\",\"percentage\":\"Statistic_percentage__3DGny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Status\":\"FriendItem_Status__3MQPH\",\"Avatar\":\"FriendItem_Avatar__2df37\",\"Name\":\"FriendItem_Name__2F5D_\",\"IsOnline\":\"FriendItem_IsOnline__3yc4_ FriendItem_Status__3MQPH\",\"IsOffline\":\"FriendItem_IsOffline__3jNnK FriendItem_Status__3MQPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendList\":\"FriendList_FriendList__3mJNk\",\"Item\":\"FriendList_Item__3Arsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionHistory\":\"TransactionHistory_TransactionHistory__tdb6c\"};","import React from 'react';\r\n// import user from './user.json';\r\nimport style from './Profile.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n    return (\r\n        < div className={style.profile} >\r\n            <div className=\"description\">\r\n                <img\r\n                    src={avatar}\r\n                    alt=\"Аватар пользователя\"\r\n                    className={style.avatar}\r\n                />\r\n                <p className={style.name}>{name}</p>\r\n                <p className={style.tag}>{tag}</p>\r\n                <p className={style.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={style.stats}>\r\n                <li className={style.list}>\r\n                    <span className={style.label}>Followers </span>\r\n                    <span className={style.quantity}>{stats.followers}</span>\r\n                </li>\r\n                <li className={style.list}>\r\n                    <span className={style.label}>Views </span>\r\n                    <span className=\"quantity\">{stats.views}</span>\r\n                </li>\r\n                <li className={style.list}>\r\n                    <span className={style.label}>Likes </span>\r\n                    <span className={style.quantity}>{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div >\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    stats:PropTypes.shape({\r\n        followers: PropTypes.number.isRequired,\r\n        views: PropTypes.number.isRequired,\r\n        likes:PropTypes.number.isRequired,\r\n    }).isRequired,\r\n}\r\n\r\nexport default Profile;","function randomColor() {\r\n  const rgbNum = () => Math.floor(Math.random() * 256);\r\n  const r = rgbNum();\r\n  const g = rgbNum();\r\n  const b = rgbNum();\r\n\r\n  return `rgb(${r},${g},${b})`;\r\n}\r\n\r\nexport { randomColor };\r\n","import React from 'react';\r\nimport s from './Statistic.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { randomColor } from '../../helpers/randomColor';\r\n\r\nconst Statistic = ({ stats, title }) => {\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n      <ul className={s.statList}>\r\n        {stats.map(({ label, percentage, id }) => (\r\n          <li\r\n            className={s.item}\r\n            key={id}\r\n            style={{ backgroundColor: randomColor() }}\r\n          >\r\n            <span className={s.label}> {label}</span>\r\n            <span className={s.percentage}> {percentage}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistic.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistic.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\n// label, percentage, id\r\n\r\nexport default Statistic;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendItem.module.css';\r\n\r\nconst FriendItem = ({ avatar, name, isOnline }) => {\r\n  const status = state => (state ? styles.IsOnline : styles.IsOffline);\r\n  return (\r\n    <>\r\n      <span className={status(isOnline)}>{isOnline}</span>\r\n      <img className={styles.Avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.Name}>{name}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nFriendItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendItem from '../friend-item/FriendItem';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={styles.FriendList}>\r\n    {friends.map(({ avatar, name, isOnline, id }) => (\r\n      <li key={id} className={styles.Item}>\r\n        <FriendItem avatar={avatar} name={name} isOnline={isOnline} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={s.TransactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","//* Core\r\nimport React from 'react';\r\n//* Components\r\nimport Container from './Container/Container';\r\nimport Profile from './social-profile/Profile';\r\nimport Statistic from './statistics/Statistic';\r\nimport FriendList from './friend-list/FriendList';\r\nimport TransactionHistory from './transaction-history/TransactionHistory';\r\n\r\n//* Data\r\nimport statisticalData from '../data/statisticalData.json';\r\nimport user from '../data/user.json';\r\nimport friends from '../data/friends.json';\r\nimport transaction from '../data/transactions.json';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Profile\r\n      name={user.name}\r\n      tag={user.tag}\r\n      location={user.location}\r\n      avatar={user.avatar}\r\n      stats={user.stats}\r\n    />\r\n    <Statistic title=\"Upload Stats\" stats={statisticalData} />\r\n    <FriendList friends={friends} />\r\n    <TransactionHistory items={transaction} />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n\r\n/* <Statistics title=\"Upload Stats\" stats={statisticalData} />\r\n        <FriendList friends={friends} />\r\n        <TransactionHistory items={transaction} />*/\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}